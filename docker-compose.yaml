version: '4.18.0'

networks:
  bookkeeping_docker_net:

services:
#  php-service:
#    build:
#      context: ./
#      dockerfile: ./php/Dockerfile
#    container_name: php-container
#    ports:
#      - '9000:9000'
#    volumes:
#      - ./api:/var/www/project
#    depends_on:
#      - mongo-service
#    networks:
#      - bookkeeping_docker_net
#
#  nginx-service:
#    image: nginx
#    container_name: nginx-container
#    volumes:
#      - ./api:/var/www/project
#      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
#    ports:
#      - '8080:80'
#    depends_on:
#      - php-service
#      - mongo-service
#    networks:
#      - bookkeeping_docker_net

  mongo-service:
    image: mongo
    container_name: mongodb-container
    restart: always
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=0000
      - MONGO_INITDB_DATABASE=bookkeeping
    volumes:
      - ./mongodb/data:/data/db:rw
      - ./mongodb/config:/data/configdb:rw
    networks:
      - bookkeeping_docker_net

  mongo_express-service:
    image: mongo-express
    restart: always
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 0000
      ME_CONFIG_MONGODB_URL: mongodb://root:0000@mongo-service:27017/
    networks:
      - bookkeeping_docker_net


  node-service:
    image: node:latest
    user: 'node'
    container_name: node-container
    working_dir: /var/www/project
    environment:
      - NODE_ENV=development
    volumes:
      - ./app:/var/www/project
    expose:
      - 8000
    command: 'npm run watch'
    networks:
      - bookkeeping_docker_net